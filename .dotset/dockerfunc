#!/bin/bash
# Bash wrappers for docker run commands

export DOCKER_REPO_PREFIX=esurdam

#
# Helper Functions
#
dcleanup(){
	docker rm $(docker ps -aq 2>/dev/null) 2>/dev/null
	docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
	docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}
del_stopped(){
	local name=$1
	local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

	if [[ "$state" == "false" ]]; then
		docker rm $name
	else
		docker stop $name 2>/dev/null
	fi
}
relies_on(){
	local containers=$@

	for container in $containers; do
		local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		else
			echo "$container is already running"
		fi
	done
}

redis() {
	del_stopped agredis

	docker run -d --name agredis -p 6379:26379 redis
}


irssi() {
	del_stopped irssi
	# relies_on notify_osd

	docker run --rm -it \
		-v /etc/localtime:/etc/localtime:ro \
		-v $HOME/.irssi:/home/user/.irssi \
		--read-only \
		--name irssi \
		${DOCKER_REPO_PREFIX}/irssi
}

mutt(){
	# subshell so we dont overwrite variables
	(
	local account=$1
	export IMAP_SERVER=""
	export SMTP_SERVER=""

	if [[ "$account" == "ag" ]]; then
		GMAIL=$MAIL_RISEUP
		GMAIL_NAME=$MAIL_RISEUP_NAME
		GMAIL_PASS=$MAIL_RISEUP_PASS
		GMAIL_FROM=$MAIL_RISEUP_FROM
		IMAP_SERVER=mail.riseup.net
		SMTP_SERVER=$IMAP_SERVER
	fi

	docker run -it --rm \
		-e GMAIL \
		-e GMAIL_NAME \
		-e GMAIL_PASS \
		-e GMAIL_FROM \
		-e GPG_ID \
		-e IMAP_SERVER \
		-e SMTP_SERVER \
		-v $HOME/.gnupg:/home/user/.gnupg:ro \
		-v /etc/localtime:/etc/localtime:ro \
		--name mutt${account} \
		${DOCKER_REPO_PREFIX}/mutt
	)
}

rainbowstream(){
	docker run -it --rm \
		-v $HOME/.dotset/dockerfiles/rainbowstream/conf:/root \
		--name rainbowstream \
		${DOCKER_REPO_PREFIX}/rainbowstream
}
